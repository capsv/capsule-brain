services:
  postgres-auth:
    image: postgres:latest
    container_name: auth-service-db
    hostname: postgres-auth
    restart: always
    environment:
      POSTGRES_DB: auth-service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 9qwe1ox
    ports:
      - "5433:5432" #для подключения из вне (например, локальная разработка) используется проброшенный наружу порт 5433, в рамках сети докер используется внутренний порт 5432
    networks:
      - capsule

  postgres-account:
    image: postgres:latest
    container_name: account-service-db
    hostname: postgres-account
    restart: always
    environment:
      POSTGRES_DB: account-service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 9qwe1ox
    ports:
      - "5434:5432"
    networks:
      - capsule

  postgres-email-verify:
    image: postgres:latest
    container_name: email-verify-service-db
    hostname: postgres-email-verify
    restart: always
    environment:
      POSTGRES_DB: email-verify-service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 9qwe1ox
    ports:
      - "5435:5432"
    networks:
      - capsule

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    restart: always
    environment:
      ZOO_MY_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - capsule

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - capsule

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    hostname: kafka-ui
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    ports:
      - "8090:8080"
    links:
      - kafka
      - zookeeper
    networks:
      - capsule

  eureka-server:
    container_name: eureka-server
    build: ./eureka-server
    environment:
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
    ports:
      - "8761:8761"
    networks:
      - capsule

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    environment:
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    networks:
      - capsule

  auth-service:
    container_name: auth-service
    build: ./auth-service
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
      POSTGRES_USERNAME: root
      POSTGRES_PASSWORD: 9qwe1ox
      POSTGRES_AUTH_URL: jdbc:postgresql://postgres-auth:5432/auth-service
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - eureka-server
      - postgres-auth
    networks:
      - capsule

  account-management-service:
    container_name: account-management-service
    build: ./account-management-service
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
      POSTGRES_USERNAME: root
      POSTGRES_PASSWORD: 9qwe1ox
      POSTGRES_ACCOUNT_URL: jdbc:postgresql://postgres-account:5432/account-service
    ports:
      - "8082:8082"
    depends_on:
      - kafka
      - eureka-server
      - postgres-account
    networks:
      - capsule

#  notification-service:
#    container_name: notification-service
#    build: ./notification-service
#    environment:
#      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
#    ports:
#      - "8083:8083"
#    depends_on:
#      - eureka-server
#    networks:
#      - capsule
#
#  vivid-log-service:
#    container_name: vivid-log-service
#    build: ./vivid-log-service
#    environment:
#      KAFKA_BOOTSTRAP_SERVER: kafka:9092
#      EUREKA_SERVER_URL: http://eureka-server:8761/eureka/
#    ports:
#      - "8085:8085"
#    depends_on:
#      - kafka
#      - eureka-server
#    networks:
#      - capsule

networks:
  capsule:
    driver: bridge